variables:
  APP_NAME: adda
  REVIEW_APP_NAME: adda-${CI_COMMIT_REF_NAME}
  REVIEW_API_ENDPOINT: ip10-0-3-3-cgts7j2bihn0qm0bq130-1993.direct.docker.labs.eazytraining.fr
  REVIEW_APP_ENDPOINT: ip10-0-3-3-cgts7j2bihn0qm0bq130-80.direct.docker.labs.eazytraining.fr
  STG_API_ENDPOINT: ip10-0-3-4-cgtref2bihn0qm0bq100-1993.direct.docker.labs.eazytraining.fr
  STG_APP_ENDPOINT: ip10-0-2-4-cgq61aqbihn0qm0bpqng-80.direct.docker.labs.eazytraining.fr
  PROD_API_ENDPOINT: ip10-0-3-5-cgtref2bihn0qm0bq100-1993.direct.docker.labs.eazytraining.fr
  PROD_APP_ENDPOINT: ip10-0-3-5-cgtref2bihn0qm0bq100-80.direct.docker.labs.eazytraining.fr
  INTERNAL_PORT: 80
  TEST_PORT: 90
  EXTERNAL_PORT: 8080
  CONTAINER_IMAGE: ${IMAGE_NAME}:${CI_COMMIT_REF_NAME}

image: docker:latest
services:
  - name: docker:dind
    alias: docker


stages:
  - build
  - Test acceptation
  - Release image
  - Deploy review
  - Stop review
  - Deploy staging
  - Test staging  
  - Deploy prod
  - Test prod

.test_template: &test
  image: alpine
  script:
    - apk --no-cache add curl
    - curl -k "https://$DOMAIN" | grep "Hello world!"

docker-build:
  # Use the official docker image.
  stage: build
  script:
    - docker build -t  ${APP_NAME} .
    - docker save ${APP_NAME} > ${APP_NAME}.tar
  artifacts:
    paths:
      - ${APP_NAME}.tar    


test acceptation:
  # Official docker image.
  stage: Test acceptation
  script:
    - docker load < ${APP_NAME}.tar
    - docker run -d -p ${TEST_PORT}:${INTERNAL_PORT} --name webapp ${APP_NAME}
    - apk --no-cache add curl
    - sleep 5
    - curl "http://docker:${TEST_PORT}" | grep -i "dimension"

release image:
  stage: Release image
  script:
    - docker load < ${APP_NAME}.tar
    - docker tag ${APP_NAME} "${IMAGE_NAME}:${CI_COMMIT_REF_NAME}"
    - docker tag ${APP_NAME} "${IMAGE_NAME}:${CI_COMMIT_SHORT_SHA}"
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker push "${IMAGE_NAME}:${CI_COMMIT_REF_NAME}"
    - docker push "${IMAGE_NAME}:${CI_COMMIT_SHORT_SHA}"

.deploy staging:
  stage: Deploy staging
  environment:
    name: staging
    url: http://${STG_APP_ENDPOINT}
  only:
    - eazylabs    
  script:
    - apk --no-cache add curl
    - 'curl -X POST http://${STG_API_ENDPOINT}/staging -H "Content-Type: application/json" -d "{\"your_name\":\"${APP_NAME}\",\"container_image\":\"${CONTAINER_IMAGE}\", \"external_port\":\"${EXTERNAL_PORT}\", \"internal_port\":\"${INTERNAL_PORT}\"}"'

..deploy prod:
  stage: Deploy prod
  environment:
    name: prod
    url: http://${PROD_APP_ENDPOINT}
  only:
    - master
  script:
    - apk --no-cache add curl
    - 'curl -X POST http://${PROD_API_ENDPOINT}/prod -H "Content-Type: application/json" -d "{\"your_name\":\"${APP_NAME}\",\"container_image\":\"${CONTAINER_IMAGE}\", \"external_port\":\"${EXTERNAL_PORT}\", \"internal_port\":\"${INTERNAL_PORT}\"}"'


.deploy review:
  stage: Deploy review
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: http://${REVIEW_APP_ENDPOINT}
    on_stop: stop review
  only:
    - merge_requests
  variables:
    APP_NAME: ${REVIEW_APP_NAME}
  script:
    - apk --no-cache add curl
    - echo $APP_NAME
    - 'curl -X POST http://${REVIEW_API_ENDPOINT}/review -H "Content-Type: application/json" -d "{\"your_name\":\"${APP_NAME}\",\"container_image\":\"${CONTAINER_IMAGE}\", \"external_port\":\"${EXTERNAL_PORT}\", \"internal_port\":\"${INTERNAL_PORT}\"}"'

.stop review:
  stage: Stop review
  variables:
    GIT_STRATEGY: none
    APP_NAME: ${REVIEW_APP_NAME}
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop
  only:
    - merge_requests
  when: manual  
  script:
    - apk --no-cache add curl
    - 'curl -X DELETE http://${REVIEW_API_ENDPOINT}/review -H "Content-Type: application/json" -d "{\"your_name\":\"${APP_NAME}\"}"'

.test staging:
  <<: *test
  stage: Test staging
  only:
  - eazylabs
  variables:
    DOMAIN: ${STG_APP_ENDPOINT}


.test prod:
  <<: *test
  stage: Test prod
  only:
    - master  
  variables:
    DOMAIN: ${PROD_APP_ENDPOINT}
